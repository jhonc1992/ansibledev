---
- name: Actualizar paquetes y programar reinicio en una fecha determinada
  hosts: web
  become: true
  gather_facts: true
  vars:
    scheduled_reboot_time: "2024-10-25 14:00"  # Variable para la fecha y hora del reinicio
  tasks:
    - name: Actualizar paquetes en Red Hat/CentOS/Oracle Linux
      ansible.builtin.dnf:
        name: "*"
        state: latest
      when: ansible_facts['os_family'] == "RedHat"
      register: dnf_update

    - name: Programar reinicio en una fecha determinada
      ansible.builtin.reboot:
        reboot_timeout: 3600  # Establecer un tiempo de espera amplio para la reconexión tras el reinicio
        pre_reboot_delay: "{{ (scheduled_reboot_time | to_datetime('%Y-%m-%d %H:%M') | to_timestamp) - (ansible_date_time.epoch | int) }}"
        post_reboot_delay: 60  # Tiempo de espera tras el reinicio
      when: dnf_update.changed
      register: reboot_result  # Registrar el resultado del reinicio

    - name: Notificar en Slack si la programación de reinicio fue exitosa
      community.general.slack:
        token: "xoxb-your-slack-token-here"
        msg: "Programación de reinicio ejecutada correctamente para {{ inventory_hostname }} a las {{ scheduled_reboot_time }}."
        channel: "#notificaciones"
      when: reboot_result is not failed

    - name: Notificar en Slack si la programación de reinicio falló
      community.general.slack:
        token: "xoxb-your-slack-token-here"
        msg: "Error al programar el reinicio en {{ inventory_hostname }}."
        channel: "#notificaciones"
      when: reboot_result is failed



